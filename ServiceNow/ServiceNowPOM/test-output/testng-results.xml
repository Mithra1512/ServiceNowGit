<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="10" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="540810" started-at="2021-11-09T18:04:26 IST" finished-at="2021-11-09T18:13:27 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="540810" started-at="2021-11-09T18:04:26 IST" finished-at="2021-11-09T18:13:27 IST">
      <class name="testcase.AssignIncident">
        <test-method status="PASS" signature="setFilename()[pri:0, instance:testcase.AssignIncident@757942a1]" name="setFilename" is-config="true" duration-ms="8" started-at="2021-11-09T18:04:26 IST" finished-at="2021-11-09T18:04:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setFilename -->
        <test-method status="PASS" signature="launchApp()[pri:0, instance:testcase.AssignIncident@757942a1]" name="launchApp" is-config="true" duration-ms="9065" started-at="2021-11-09T18:05:49 IST" finished-at="2021-11-09T18:05:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method status="PASS" signature="updateIncident(java.lang.String)[pri:2, instance:testcase.AssignIncident@757942a1]" name="updateIncident" duration-ms="21716" started-at="2021-11-09T18:05:58 IST" data-provider="fetchData" finished-at="2021-11-09T18:06:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[INC0010126]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateIncident -->
        <test-method status="PASS" signature="closeApp()[pri:0, instance:testcase.AssignIncident@757942a1]" name="closeApp" is-config="true" duration-ms="4160" started-at="2021-11-09T18:06:20 IST" finished-at="2021-11-09T18:06:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="launchApp()[pri:0, instance:testcase.AssignIncident@757942a1]" name="launchApp" is-config="true" duration-ms="9479" started-at="2021-11-09T18:06:24 IST" finished-at="2021-11-09T18:06:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method status="PASS" signature="updateIncident(java.lang.String)[pri:2, instance:testcase.AssignIncident@757942a1]" name="updateIncident" duration-ms="21177" started-at="2021-11-09T18:06:34 IST" data-provider="fetchData" finished-at="2021-11-09T18:06:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[INC0010127]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateIncident -->
        <test-method status="PASS" signature="closeApp()[pri:0, instance:testcase.AssignIncident@757942a1]" name="closeApp" is-config="true" duration-ms="4119" started-at="2021-11-09T18:06:55 IST" finished-at="2021-11-09T18:06:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="writeToexcel()[pri:0, instance:testcase.AssignIncident@757942a1]" name="writeToexcel" is-config="true" duration-ms="49" started-at="2021-11-09T18:06:59 IST" finished-at="2021-11-09T18:06:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeToexcel -->
      </class> <!-- testcase.AssignIncident -->
      <class name="testcase.CreateNewIncident">
        <test-method status="PASS" signature="setFilename()[pri:0, instance:testcase.CreateNewIncident@69b0fd6f]" name="setFilename" is-config="true" duration-ms="0" started-at="2021-11-09T18:04:26 IST" finished-at="2021-11-09T18:04:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setFilename -->
        <test-method status="PASS" signature="launchApp()[pri:0, instance:testcase.CreateNewIncident@69b0fd6f]" name="launchApp" is-config="true" duration-ms="11006" started-at="2021-11-09T18:04:27 IST" finished-at="2021-11-09T18:04:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method status="PASS" signature="createNewIncident(java.lang.String, java.lang.String)[pri:0, instance:testcase.CreateNewIncident@69b0fd6f]" name="createNewIncident" duration-ms="29972" started-at="2021-11-09T18:04:38 IST" data-provider="fetchData" finished-at="2021-11-09T18:05:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Justina Dragaj]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ticket Number 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewIncident -->
        <test-method status="PASS" signature="closeApp()[pri:0, instance:testcase.CreateNewIncident@69b0fd6f]" name="closeApp" is-config="true" duration-ms="4110" started-at="2021-11-09T18:05:07 IST" finished-at="2021-11-09T18:05:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="launchApp()[pri:0, instance:testcase.CreateNewIncident@69b0fd6f]" name="launchApp" is-config="true" duration-ms="9430" started-at="2021-11-09T18:05:12 IST" finished-at="2021-11-09T18:05:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method status="PASS" signature="createNewIncident(java.lang.String, java.lang.String)[pri:0, instance:testcase.CreateNewIncident@69b0fd6f]" name="createNewIncident" duration-ms="24002" started-at="2021-11-09T18:05:21 IST" data-provider="fetchData" finished-at="2021-11-09T18:05:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mari Hwang]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ticket Number 2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewIncident -->
        <test-method status="PASS" signature="closeApp()[pri:0, instance:testcase.CreateNewIncident@69b0fd6f]" name="closeApp" is-config="true" duration-ms="4128" started-at="2021-11-09T18:05:45 IST" finished-at="2021-11-09T18:05:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="writeToexcel()[pri:0, instance:testcase.CreateNewIncident@69b0fd6f]" name="writeToexcel" is-config="true" duration-ms="199" started-at="2021-11-09T18:05:49 IST" finished-at="2021-11-09T18:05:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeToexcel -->
      </class> <!-- testcase.CreateNewIncident -->
      <class name="testcase.ResolveIncident">
        <test-method status="PASS" signature="setFilename()[pri:0, instance:testcase.ResolveIncident@8646db9]" name="setFilename" is-config="true" duration-ms="0" started-at="2021-11-09T18:04:26 IST" finished-at="2021-11-09T18:04:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setFilename -->
        <test-method status="PASS" signature="launchApp()[pri:0, instance:testcase.ResolveIncident@8646db9]" name="launchApp" is-config="true" duration-ms="9736" started-at="2021-11-09T18:10:33 IST" finished-at="2021-11-09T18:10:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method status="FAIL" signature="updateIncident(java.lang.String)[pri:3, instance:testcase.ResolveIncident@8646db9]" name="updateIncident" duration-ms="75649" started-at="2021-11-09T18:10:43 IST" data-provider="fetchData" finished-at="2021-11-09T18:11:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[INC0010126]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"*[name='incident.state']"}
  (Session info: chrome=95.0.4638.69)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0-alpha-6', revision: '5f43a29cfc'
System info: host: 'DESKTOP-STKN78T', ip: '192.168.0.112', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_301'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 95.0.4638.69, chrome: {chromedriverVersion: 95.0.4638.69 (6a1600ed572fe..., userDataDir: C:\Users\prash\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62486}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9143e06673b8511c1edd8f78c56a9151
*** Element info: {Using=name, value=incident.state}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"*[name='incident.state']"}
  (Session info: chrome=95.0.4638.69)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0-alpha-6', revision: '5f43a29cfc'
System info: host: 'DESKTOP-STKN78T', ip: '192.168.0.112', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_301'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 95.0.4638.69, chrome: {chromedriverVersion: 95.0.4638.69 (6a1600ed572fe..., userDataDir: C:\Users\prash\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62486}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9143e06673b8511c1edd8f78c56a9151
*** Element info: {Using=name, value=incident.state}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:196)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:129)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:333)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:421)
at pages.IncidentDetailsPage.updateState(IncidentDetailsPage.java:24)
at testcase.ResolveIncident.updateIncident(ResolveIncident.java:22)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateIncident -->
        <test-method status="PASS" signature="closeApp()[pri:0, instance:testcase.ResolveIncident@8646db9]" name="closeApp" is-config="true" duration-ms="4149" started-at="2021-11-09T18:11:58 IST" finished-at="2021-11-09T18:12:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="launchApp()[pri:0, instance:testcase.ResolveIncident@8646db9]" name="launchApp" is-config="true" duration-ms="9199" started-at="2021-11-09T18:12:02 IST" finished-at="2021-11-09T18:12:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method status="FAIL" signature="updateIncident(java.lang.String)[pri:3, instance:testcase.ResolveIncident@8646db9]" name="updateIncident" duration-ms="75241" started-at="2021-11-09T18:12:12 IST" data-provider="fetchData" finished-at="2021-11-09T18:13:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[INC0010127]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"*[name='incident.state']"}
  (Session info: chrome=95.0.4638.69)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0-alpha-6', revision: '5f43a29cfc'
System info: host: 'DESKTOP-STKN78T', ip: '192.168.0.112', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_301'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 95.0.4638.69, chrome: {chromedriverVersion: 95.0.4638.69 (6a1600ed572fe..., userDataDir: C:\Users\prash\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62574}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 8d67ad28c91e5243ba9279dbd299de9c
*** Element info: {Using=name, value=incident.state}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"*[name='incident.state']"}
  (Session info: chrome=95.0.4638.69)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0-alpha-6', revision: '5f43a29cfc'
System info: host: 'DESKTOP-STKN78T', ip: '192.168.0.112', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_301'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 95.0.4638.69, chrome: {chromedriverVersion: 95.0.4638.69 (6a1600ed572fe..., userDataDir: C:\Users\prash\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62574}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 8d67ad28c91e5243ba9279dbd299de9c
*** Element info: {Using=name, value=incident.state}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:196)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:129)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:333)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:421)
at pages.IncidentDetailsPage.updateState(IncidentDetailsPage.java:24)
at testcase.ResolveIncident.updateIncident(ResolveIncident.java:22)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateIncident -->
        <test-method status="PASS" signature="closeApp()[pri:0, instance:testcase.ResolveIncident@8646db9]" name="closeApp" is-config="true" duration-ms="115" started-at="2021-11-09T18:13:27 IST" finished-at="2021-11-09T18:13:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="writeToexcel()[pri:0, instance:testcase.ResolveIncident@8646db9]" name="writeToexcel" is-config="true" duration-ms="19" started-at="2021-11-09T18:13:27 IST" finished-at="2021-11-09T18:13:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeToexcel -->
      </class> <!-- testcase.ResolveIncident -->
      <class name="testcase.UpdateIncident">
        <test-method status="PASS" signature="setFilename()[pri:0, instance:testcase.UpdateIncident@4a87761d]" name="setFilename" is-config="true" duration-ms="0" started-at="2021-11-09T18:04:26 IST" finished-at="2021-11-09T18:04:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setFilename -->
        <test-method status="PASS" signature="launchApp()[pri:0, instance:testcase.UpdateIncident@4a87761d]" name="launchApp" is-config="true" duration-ms="9001" started-at="2021-11-09T18:06:59 IST" finished-at="2021-11-09T18:07:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method status="PASS" signature="updateIncident(java.lang.String)[pri:1, instance:testcase.UpdateIncident@4a87761d]" name="updateIncident" duration-ms="24486" started-at="2021-11-09T18:07:08 IST" data-provider="fetchData" finished-at="2021-11-09T18:07:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[INC0010126]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateIncident -->
        <test-method status="PASS" signature="closeApp()[pri:0, instance:testcase.UpdateIncident@4a87761d]" name="closeApp" is-config="true" duration-ms="4108" started-at="2021-11-09T18:07:33 IST" finished-at="2021-11-09T18:07:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="launchApp()[pri:0, instance:testcase.UpdateIncident@4a87761d]" name="launchApp" is-config="true" duration-ms="10256" started-at="2021-11-09T18:07:37 IST" finished-at="2021-11-09T18:07:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method status="PASS" signature="updateIncident(java.lang.String)[pri:1, instance:testcase.UpdateIncident@4a87761d]" name="updateIncident" duration-ms="26664" started-at="2021-11-09T18:07:47 IST" data-provider="fetchData" finished-at="2021-11-09T18:08:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[INC0010127]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateIncident -->
        <test-method status="PASS" signature="closeApp()[pri:0, instance:testcase.UpdateIncident@4a87761d]" name="closeApp" is-config="true" duration-ms="4126" started-at="2021-11-09T18:08:14 IST" finished-at="2021-11-09T18:08:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="writeToexcel()[pri:0, instance:testcase.UpdateIncident@4a87761d]" name="writeToexcel" is-config="true" duration-ms="20" started-at="2021-11-09T18:08:18 IST" finished-at="2021-11-09T18:08:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeToexcel -->
      </class> <!-- testcase.UpdateIncident -->
      <class name="testcase.DeleteIncident">
        <test-method status="PASS" signature="setFilename()[pri:0, instance:testcase.DeleteIncident@66d1af89]" name="setFilename" is-config="true" duration-ms="0" started-at="2021-11-09T18:04:26 IST" finished-at="2021-11-09T18:04:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setFilename -->
        <test-method status="PASS" signature="launchApp()[pri:0, instance:testcase.DeleteIncident@66d1af89]" name="launchApp" is-config="true" duration-ms="9107" started-at="2021-11-09T18:08:18 IST" finished-at="2021-11-09T18:08:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method status="PASS" signature="deleteIncident(java.lang.String)[pri:4, instance:testcase.DeleteIncident@66d1af89]" name="deleteIncident" duration-ms="55340" started-at="2021-11-09T18:08:27 IST" data-provider="fetchData" finished-at="2021-11-09T18:09:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[INC0010126]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteIncident -->
        <test-method status="PASS" signature="closeApp()[pri:0, instance:testcase.DeleteIncident@66d1af89]" name="closeApp" is-config="true" duration-ms="4147" started-at="2021-11-09T18:09:22 IST" finished-at="2021-11-09T18:09:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="launchApp()[pri:0, instance:testcase.DeleteIncident@66d1af89]" name="launchApp" is-config="true" duration-ms="8917" started-at="2021-11-09T18:09:26 IST" finished-at="2021-11-09T18:09:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method status="PASS" signature="deleteIncident(java.lang.String)[pri:4, instance:testcase.DeleteIncident@66d1af89]" name="deleteIncident" duration-ms="53227" started-at="2021-11-09T18:09:35 IST" data-provider="fetchData" finished-at="2021-11-09T18:10:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[INC0010127]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteIncident -->
        <test-method status="PASS" signature="closeApp()[pri:0, instance:testcase.DeleteIncident@66d1af89]" name="closeApp" is-config="true" duration-ms="4151" started-at="2021-11-09T18:10:29 IST" finished-at="2021-11-09T18:10:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="PASS" signature="writeToexcel()[pri:0, instance:testcase.DeleteIncident@66d1af89]" name="writeToexcel" is-config="true" duration-ms="15" started-at="2021-11-09T18:10:33 IST" finished-at="2021-11-09T18:10:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeToexcel -->
      </class> <!-- testcase.DeleteIncident -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
